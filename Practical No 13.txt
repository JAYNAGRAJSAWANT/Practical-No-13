/*25	A palindrome is a string of character that‘s the same forward and backward. Typically, punctuation, capitalization, and spaces are ignored. For example, “Poor Dan is in a droop” is a palindrome, as can be seen by examining the characters “poor danisina droop” and observing that they are the same forward and backward. One way to check for a palindrome is to reverse the characters in the string and then compare with them the original-in a palindrome, the sequence will be identical. Write C++ program with functions-
a)	To print original string followed by reversed string using stack
b)	To check whether given string is palindrome or not
*/

#include<iostream>
#include<string.h>
using namespace std;
#define size 50
class Stack
{
    private:
        char input_str[size];
        char stack_data[size];
        int top,length,char_count;
public:
    Stack() //constructor
    {
        top=-1;
        length=0;
        char_count=0;
    }
    void push(char);
    char pop();
    void input_data();
    void check_palindrome();
    void display_original();
    void display_reverse();
};

void Stack::push(char temp)
{
    if(top==size-1)
    {
        cout<<"\n Stack Overflow !";
        return;
    }
    top++;
    stack_data[top]=temp;
}
char Stack::pop()
{
    if(top==-1)
    {
        cout<<"\n Stack Underflow !";
        char ch='\n';
        return ch;
    }
    char temp=stack_data[top];
    top--;
    return temp;
}
void Stack::input_data()
{
    cout<<"\n Enter a String: ";
    cin.getline(input_str,size);
    length=strlen(input_str);
}

void Stack::check_palindrome()
{
    for(int i=0; i<length; i++)
        push(input_str[i]);
    for(int i=0; i<length; i++)
    {
        if(input_str[i]==pop())     //here we find match
            char_count++;
    }
    if(char_count==length)
        cout<<"\n Given string is a Palindrome !\n";
    else
        cout<<"\n Given string is not a Palindrome !\n";
}
void Stack::display_original()
{
    for(int i=0; i<=length-1; i++)
        cout<<input_str[i];
}
void Stack::display_reverse()
{
    for(int i=length-1; i>=0; i--)
        cout<<input_str[i];
}
int main()
{
    Stack obj;
    obj.input_data();
    cout<<"\n Displaying the original String:  ";
    obj.display_original();
    cout<<"\n Displaying the reversed string:  ";
    obj.display_reverse();
    cout<<"\n\t Checking for Palindrome....\n";
    obj.check_palindrome();
    return 0;
}
